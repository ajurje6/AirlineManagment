import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.sql.*;
import com.toedter.calendar.JDateChooser;
import java.util.Random;

public class Booking extends JFrame implements ActionListener {

    JTextField txtPassengerId;
    JLabel tfname, tfsurname, tfnationality, tfphone, tfaddress, labelgender, labelfcode;
    JButton bookflight, fetchButton, flight;
    Choice source, destination;
    JDateChooser dcdate;

    public Booking() {
        getContentPane().setBackground(Color.WHITE);
        setLayout(null);

        JLabel heading = new JLabel("Book Flight");
        heading.setBounds(420, 20, 500, 35);
        heading.setFont(new Font("Tahoma", Font.PLAIN, 32));
        heading.setForeground(Color.BLUE);
        add(heading);

        JLabel lblaadhar = new JLabel("Passenger ID");
        lblaadhar.setBounds(60, 80, 150, 25);
        lblaadhar.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblaadhar);

        txtPassengerId = new JTextField();
        txtPassengerId.setBounds(220, 80, 150, 25);
        add(txtPassengerId);

        fetchButton = new JButton("Fetch User");
        fetchButton.setBackground(Color.BLACK);
        fetchButton.setForeground(Color.WHITE);
        fetchButton.setBounds(380, 80, 120, 25);
        fetchButton.addActionListener(this);
        add(fetchButton);

        JLabel lblname = new JLabel("Name");
        lblname.setBounds(60, 130, 150, 25);
        lblname.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblname);

        tfname = new JLabel();
        tfname.setBounds(220, 130, 150, 25);
        add(tfname);

        JLabel lblsurname = new JLabel("Surname");
        lblsurname.setBounds(60, 160, 150, 25);
        lblsurname.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblsurname);

        tfsurname = new JLabel();
        tfsurname.setBounds(220, 160, 150, 25);
        add(tfsurname);

        JLabel lblphone = new JLabel("Phone");
        lblphone.setBounds(60, 190, 150, 25);
        lblphone.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblphone);

        tfphone = new JLabel();
        tfphone.setBounds(220, 190, 150, 25);
        add(tfphone);

        JLabel lblnationality = new JLabel("Nationality");
        lblnationality.setBounds(60, 220, 150, 25);
        lblnationality.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblnationality);

        tfnationality = new JLabel();
        tfnationality.setBounds(220, 220, 150, 25);
        add(tfnationality);

        JLabel lbladdress = new JLabel("Address");
        lbladdress.setBounds(60, 250, 150, 25);
        lbladdress.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lbladdress);

        tfaddress = new JLabel();
        tfaddress.setBounds(220, 250, 150, 25);
        add(tfaddress);

        JLabel lblsource = new JLabel("Source");
        lblsource.setBounds(60, 300, 150, 25);
        lblsource.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblsource);

        source = new Choice();
        source.setBounds(220, 300, 150, 25);
        add(source);

        JLabel lbldest = new JLabel("Destination");
        lbldest.setBounds(60, 330, 150, 25);
        lbldest.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lbldest);

        destination = new Choice();
        destination.setBounds(220, 330, 150, 25);
        add(destination);

        try (Connection conn = DBConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT DISTINCT origin, destination FROM flightinfo")) {
            while (rs.next()) {
                source.add(rs.getString("origin"));
                destination.add(rs.getString("destination"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        JLabel lbldate = new JLabel("Date of Travel");
        lbldate.setBounds(60, 360, 150, 25);
        lbldate.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lbldate);

        dcdate = new JDateChooser();
        dcdate.setBounds(220, 360, 150, 25);
        add(dcdate);

        JLabel lblfcode = new JLabel("Flight Code");
        lblfcode.setBounds(60, 400, 150, 25);
        lblfcode.setFont(new Font("Tahoma", Font.PLAIN, 16));
        add(lblfcode);

        labelfcode = new JLabel();
        labelfcode.setBounds(220, 400, 150, 25);
        add(labelfcode);

        bookflight = new JButton("Book Flight");
        bookflight.setBackground(Color.BLACK);
        bookflight.setForeground(Color.WHITE);
        bookflight.setBounds(220, 450, 150, 25);
        bookflight.addActionListener(this);
        add(bookflight);

        setSize(800, 600);
        setLocation(200, 100);
        setVisible(true);
    }

    public void actionPerformed(ActionEvent ae) {
        try (Connection conn = DBConnection.getConnection()) {
            if (ae.getSource() == fetchButton) {
                String PassengerId = txtPassengerId.getText();

                String query = "SELECT * FROM passenger WHERE passenger_id = ?";
                try (PreparedStatement ps = conn.prepareStatement(query)) {
                    ps.setString(1, PassengerId);
                    try (ResultSet rs = ps.executeQuery()) {
                        if (rs.next()) {
                            tfname.setText(rs.getString("name"));
                            tfsurname.setText(rs.getString("surname"));
                            tfphone.setText(rs.getString("phone"));
                            tfnationality.setText(rs.getString("nationality"));
                            tfaddress.setText(rs.getString("address"));
                        } else {
                            JOptionPane.showMessageDialog(null, "Passenger not found.");
                        }
                    }
                }
            } else if (ae.getSource() == bookflight) {
                String PassengerId = txtPassengerId.getText();
                String name = tfname.getText();
                String surname = tfsurname.getText();
                String phone = tfphone.getText();
                String nationality = tfnationality.getText();
                String address = tfaddress.getText();
                String origin = source.getSelectedItem();
                String destination = destination.getSelectedItem();
                String flightCode = labelfcode.getText();
                String travelDate = ((JTextField) dcdate.getDateEditor().getUiComponent()).getText();

                Random random = new Random();
                String PNR = "PNR-" + random.nextInt(100000);

                String query = "INSERT INTO ams_reservations (name, surname, nationality, phone, address, origin, destination, date, flight_code, PNR) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                try (PreparedStatement ps = conn.prepareStatement(query)) {
                    ps.setString(1, name);
                    ps.setString(2, surname);
                    ps.setString(3, nationality);
                    ps.setString(4, phone);
                    ps.setString(5, address);
                    ps.setString(6, origin);
                    ps.setString(7, destination);
                    ps.setString(8, travelDate);
                    ps.setString(9, flightCode);
                    ps.setString(10, PNR);

                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Flight booked successfully! Your PNR is " + PNR);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        new Booking();
    }
}


